{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\BLOG_LYFE\\\\frontend\\\\src\\\\components\\\\BlogDetail.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport * as Scrivito from \"scrivito\";\nimport BlogPostAuthor from \"../../Components/BlogPost/BlogPostAuthor\";\nimport BlogPostMorePosts from \"../../Components/BlogPost/BlogPostMorePosts\";\nimport BlogPostNavigation from \"../../Components/BlogPost/BlogPostNavigation\";\nimport BlogPostTagList from \"../../Components/BlogPost/BlogPostTagList\";\nimport SchemaDotOrg from \"../../Components/SchemaDotOrg\";\nimport Disqus from \"disqus-react\";\n\nconst BlogDetail = props => {\n  const [blog, setBlog] = useState({});\n  useEffect(() => {\n    const slug = props.match.params.id;\n\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/blog/${slug}`);\n        setBlog(res.data);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, [props.match.params.id]);\n\n  const capitalizeFirstLetter = word => {\n    if (word) return word.charAt(0).toUpperCase() + word.slice(1);else return '';\n  };\n\n  const createBlog = () => {\n    return {\n      __html: blog.content\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, blog.title), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-muted mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Category: \", capitalizeFirstLetter(blog.category)), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, blog.month, \" \", blog.day), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 mb-5\",\n    dangerouslySetInnerHTML: createBlog(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/blog\",\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 38\n    }\n  }, \"Back to Blogs\")));\n};\n\nexport default BlogDetail;\nScrivito.provideComponent(\"BlogPost\", ({\n  page\n}) => {\n  const disqusShortname = \"YOUR_DISQUS_SHORTNAME\";\n  const disqusConfig = {\n    url: Scrivito.urlFor(page),\n    identifier: page.id(),\n    title: page.get(\"title\")\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlogPostNavigation, {\n    currentPost: page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Scrivito.ContentTag, {\n    tag: \"h1\",\n    className: \"h2\",\n    content: page,\n    attribute: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Scrivito.ContentTag, {\n    tag: \"h2\",\n    className: \"h4\",\n    content: page,\n    attribute: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Scrivito.ContentTag, {\n    tag: \"div\",\n    content: page,\n    attribute: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Disqus.DiscussionEmbed, {\n    shortname: disqusShortname,\n    config: disqusConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(BlogPostAuthor, {\n    style: \"width: 18rem;\",\n    author: page.get(\"author\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlogPostTagList, {\n    tags: page.get(\"tags\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlogPostMorePosts, {\n    author: page.get(\"author\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SchemaDotOrg, {\n    content: page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/BLOG_LYFE/frontend/src/components/BlogDetail.js"],"names":["React","useState","useEffect","axios","Link","Scrivito","BlogPostAuthor","BlogPostMorePosts","BlogPostNavigation","BlogPostTagList","SchemaDotOrg","Disqus","BlogDetail","props","blog","setBlog","slug","match","params","id","fetchData","res","get","process","env","REACT_APP_API_URL","data","err","capitalizeFirstLetter","word","charAt","toUpperCase","slice","createBlog","__html","content","title","category","month","day","provideComponent","page","disqusShortname","disqusConfig","url","urlFor","identifier"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nimport * as Scrivito from \"scrivito\";\nimport BlogPostAuthor from \"../../Components/BlogPost/BlogPostAuthor\";\nimport BlogPostMorePosts from \"../../Components/BlogPost/BlogPostMorePosts\";\nimport BlogPostNavigation from \"../../Components/BlogPost/BlogPostNavigation\";\nimport BlogPostTagList from \"../../Components/BlogPost/BlogPostTagList\";\nimport SchemaDotOrg from \"../../Components/SchemaDotOrg\";\nimport Disqus from \"disqus-react\";\n\n\n\nconst BlogDetail = (props) => {\n    const [blog, setBlog] = useState({});\n\n    useEffect(() => {\n        const slug = props.match.params.id;\n\n        const fetchData = async () => {\n            try {\n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/blog/${slug}`);\n                setBlog(res.data);\n            }\n            catch (err) {\n\n            }\n        }\n\n        fetchData();\n    }, [props.match.params.id]);\n\n    const capitalizeFirstLetter = (word) => {\n        if (word)\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        else\n            return '';\n    };\n\n    const createBlog = () => {\n        return {__html: blog.content};\n    };\n\n    return (\n        <div className='container mt-3'>\n            <h1 className='display-2'>{blog.title}</h1>\n            <h2 className='text-muted mt-3'>Category: {capitalizeFirstLetter(blog.category)}</h2>\n            <h4 className=''>{blog.month} {blog.day}</h4>\n            <div className='mt-5 mb-5' dangerouslySetInnerHTML={createBlog()} />\n            <hr />\n            <p className=\"lead mb-5\"><Link to='/blog' className=\"font-weight-bold\">Back to Blogs</Link></p>\n        </div>\n    );\n}\n\nexport default BlogDetail;\n\n\nScrivito.provideComponent(\"BlogPost\", ({ page }) => {\n  const disqusShortname = \"YOUR_DISQUS_SHORTNAME\";\n  const disqusConfig = {\n    url: Scrivito.urlFor(page),\n    identifier: page.id(),\n    title: page.get(\"title\")\n  };\n\n  return (\n    <div>\n      <BlogPostNavigation currentPost={page} />\n      <section className=\"bg-white\">\n        <div className=\"container\">\n          <Scrivito.ContentTag\n            tag=\"h1\"\n            className=\"h2\"\n            content={page}\n            attribute=\"title\"\n          />\n          <Scrivito.ContentTag\n            tag=\"h2\"\n            className=\"h4\"\n            content={page}\n            attribute=\"subtitle\"\n          />\n        </div>\n      </section>\n      <Scrivito.ContentTag tag=\"div\" content={page} attribute=\"body\" />\n      <div className=\"container\">\n        <Disqus.DiscussionEmbed\n          shortname={disqusShortname}\n          config={disqusConfig}\n        />\n      </div>\n      <BlogPostAuthor style=\"width: 18rem;\" author={page.get(\"author\")} />\n      <BlogPostTagList tags={page.get(\"tags\")} />\n      <BlogPostMorePosts author={page.get(\"author\")} />\n      <SchemaDotOrg content={page} />\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}